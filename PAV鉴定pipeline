**鉴定PAV的原理**：A材料里有，B材料里没有的序列，所以只需要把A材料的序列比到B材料上，找到A有但是比对不上B的序列，把这些序列进行合并，找到的就是A特有的序列
**鉴定PAV的工具**：BWA MEM
1）BWA的下载和安装[1]
$ wget http://jaist.dl.sourceforge.net/project/bio-bwa/bwa-0.7.9a.tar.bz2
$ tar jxf bwa-0.7.9a.tar.bz2 -C /opt/biosoft/
$ cd /opt/biosoft/bwa-0.7.9a/
$ make
$ echo 'PATH=$PATH:/public1/home/sc80041/huangshihui/biosoft/bwa-0.7.9a' >> ~/.bashrc   # 这一步将bwa路径加入以后，在使用时就不需要全路径
$ source ~/.bashrc
**鉴定PAV的流程**： 找哪个基因组特有的PAV，就拆分它的基因组，然后对应的另一个基因组做bwa index. 比如，本例中用LongmiA作为bwa index，需要拆分LongmiB的亚基因组作为Input.
1）拆分LongmiB基因组
perl *.pl *.fasta bin_size step_size output  
perl split_sequence_into_bins.pl /public1/home/sc80041/huangshihui/data/Panicum_miliaceum/Longmi4/LongmiB.fa 500 100 PAV_split_LongmiB.fa
1）bwa 建立索引
#!/bin/bash

source ~/.bashrc

srun -n 3 bwa index /public1/home/sc80041/huangshihui/data/Panicum_miliaceum/Longmi4/LongmiA.fa -p LongmiA_index

-p 输出数据库的前缀, 如果不添加则默认将索引的输出文件放到和LongmiA.fa同一个目录下

输出文件：
LongmiA_index.amb
LongmiA_index.ann
LongmiA_index.bwt
LongmiA_index.pac
LongmiA_index.sa

2）bwa mem 比对，并使用samtools 将格式转换为bam文件，否则sam文件会很大
#!/bin/bash

source ~/.bashrc

srun -n 10 bwa mem -t 10 -w 500 -M ./genome ./PAV_split_LongmiB.fa | samtools view -b -o ./PAV_split_LongmiA.bwa_mem.genome.bam
-w 500 -M 参数来自Mo17[2]
用了十个线程在bwa时也要用-t 10
./genome 是建立索引的文件名
-b 输出为bam文件
-o 输出文件名称

3）
samtools view -h PAV_split_LongmiA.bwa_mem.genome.bam | less -S   # 查看bam文件
samtools view -f 4 PAV_split_LongmiA.bwa_mem.genome.bam | awk '{print $1}' > chr_coords.txt   # -f 4：找到unmapped sequence 并取出第一列的数据如GWHAAEZ00000009:62101-62600
cat chr_coords.txt | awk -F ':' '{print $1}' > chr.txt
cat chr_coords.txt | awk -F ':' '{print $2}' | awk -F '-' '{print $1}' > coords1.txt  
cat chr_coords.txt | awk -F ':' '{print $2}' | awk -F '-' '{print $2}' > coords2.txt  
paste chr.txt coords1.txt coords2.txt > wait_sort.bed
sort -k 1,1 -k 2,2n wait_sort.bed > sorted.bed
conda activate huangshihui
bedtools merge -i sorted.bed > LongmiB_PAV.txt

***准备circos输入文件***
以Longmi4_LM01特有的PAV序列为例：

1.用终止位置-起始位置，得到PAV序列的大小，目前办法是把Longmi4_PAV.txt这个文件传送到excel进行计算再传回来，得到/public1/home/sc80041/huangshihui/PAV/Longmi4_specific/circos/pav_size.tx
也可以用awk直接实现：cat LongmiA_PAV.txt | awk '{print $1,$2,$3,$3-$2}' > pav_size.txt
cat pav_size.txt | awk '$1="LM01"{print}' # 取出带有LM01的行
LM01    5229501 5230600 1099
LM01    5230801 5231300 499
LM01    5234701 5236400 1699
LM01    5265101 5265600 499
LM01    5267401 5268800 1399
LM01    7146201 7146700 499
LM01    8501301 8504400 3099
LM01    8926401 8929200 2799
LM01    8929201 8930000 799
LM01    8930601 8933000 2399
2.取出染色体名称、起始位置、大小这三列，作为拆分区间为脚本的输入文件，如下：
awk '{print $1,$2,$4}' > LM01.d
LM01    5229501 1099
LM01    5230801 499
LM01    5234701 1699
LM01    5265101 499
LM01    5267401 1399
LM01    7146201 499
LM01    8501301 3099
LM01    8926401 2799
LM01    8929201 799
LM01    8930601 2399

以上两步一步到位：cat pav_size.txt | awk '$1=="LM01"{print $1,$2,$4}' | tr ' ' '\t' > LM01.d  # tr命令的作用是把空格换成table键，否则运行脚本时会出现错误
cat pav_size.txt | awk '$1=="LM02"{print $1,$2,$4}' | tr ' ' '\t' > LM02.d
cat pav_size.txt | awk '$1=="LM03"{print $1,$2,$4}' | tr ' ' '\t' > LM03.d
cat pav_size.txt | awk '$1=="LM04"{print $1,$2,$4}' | tr ' ' '\t' > LM04.d
cat pav_size.txt | awk '$1=="LM05"{print $1,$2,$4}' | tr ' ' '\t' > LM05.d
cat pav_size.txt | awk '$1=="LM06"{print $1,$2,$4}' | tr ' ' '\t' > LM06.d
cat pav_size.txt | awk '$1=="LM07"{print $1,$2,$4}' | tr ' ' '\t' > LM07.d
cat pav_size.txt | awk '$1=="LM08"{print $1,$2,$4}' | tr ' ' '\t' > LM08.d
cat pav_size.txt | awk '$1=="LM09"{print $1,$2,$4}' | tr ' ' '\t' > LM09.d
cat pav_size.txt | awk '$1=="LM10"{print $1,$2,$4}' | tr ' ' '\t' > LM10.d
cat pav_size.txt | awk '$1=="LM11"{print $1,$2,$4}' | tr ' ' '\t' > LM11.d
cat pav_size.txt | awk '$1=="LM12"{print $1,$2,$4}' | tr ' ' '\t' > LM12.d
cat pav_size.txt | awk '$1=="LM13"{print $1,$2,$4}' | tr ' ' '\t' > LM13.d
cat pav_size.txt | awk '$1=="LM14"{print $1,$2,$4}' | tr ' ' '\t' > LM14.d
cat pav_size.txt | awk '$1=="LM15"{print $1,$2,$4}' | tr ' ' '\t' > LM15.d
cat pav_size.txt | awk '$1=="LM16"{print $1,$2,$4}' | tr ' ' '\t' > LM16.d
cat pav_size.txt | awk '$1=="LM17"{print $1,$2,$4}' | tr ' ' '\t' > LM17.d
cat pav_size.txt | awk '$1=="LM18"{print $1,$2,$4}' | tr ' ' '\t' > LM18.d

3.python3 2.chr01.py  LM01.d  # 一定要用python3,用python2.0版本会在line14出现报错
**拆分成100kb的区间，并计算每个区间内PAV的数量**
wenjian = open('LM01.dsp','w')    # 输出文件的名称后缀为.dsp
def sum(a,b):
    with open('LM01.d','r')as f1:   # 输入文件的名称后缀为.d
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 69183459+100000:     # LM01的染色体大小为69183459
    print('LM01',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
    
得到LM01.dsp文件，即为circos的输入文件：
LM01    4600000 4700000 0
LM01    4700000 4800000 0
LM01    4800000 4900000 0
LM01    4900000 5000000 0
LM01    5000000 5100000 0
LM01    5100000 5200000 0
LM01    5200000 5300000 5195
LM01    5300000 5400000 0
LM01    5400000 5500000 0

**********************************脚本的具体改动流水线LM02*****************************
wenjian = open('LM02.dsp','w')
def sum(a,b):
    with open('LM02.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 61153219+100000:
    print('LM02',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM03*****************************
wenjian = open('LM03.dsp','w')
def sum(a,b):
    with open('LM03.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 57970102+100000:
    print('LM03',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM04*****************************
wenjian = open('LM04.dsp','w')
def sum(a,b):
    with open('LM04.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 56286655+100000:
    print('LM04',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM05*****************************
wenjian = open('LM05.dsp','w')
def sum(a,b):
    with open('LM05.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 54126031+100000:
    print('LM05',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM06*****************************
wenjian = open('LM06.dsp','w')
def sum(a,b):
    with open('LM06.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 52839179+100000:
    print('LM06',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM07*****************************
wenjian = open('LM07.dsp','w')
def sum(a,b):
    with open('LM07.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 51234605+100000:
    print('LM07',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM08*****************************
wenjian = open('LM08.dsp','w')
def sum(a,b):
    with open('LM08.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 48259421+100000:
    print('LM08',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM09*****************************
wenjian = open('LM09.dsp','w')
def sum(a,b):
    with open('LM09.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 45112342+100000:
    print('LM09',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM10*****************************
wenjian = open('LM10.dsp','w')
def sum(a,b):
    with open('LM10.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 44648547+100000:
    print('LM10',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM11*****************************
wenjian = open('LM11.dsp','w')
def sum(a,b):
    with open('LM11.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 43177482+100000:
    print('LM11',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM12*****************************
wenjian = open('LM12.dsp','w')
def sum(a,b):
    with open('LM12.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 42466157+100000:
    print('LM12',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM13*****************************
wenjian = open('LM13.dsp','w')
def sum(a,b):
    with open('LM13.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 40720392+100000:
    print('LM13',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM14*****************************
wenjian = open('LM14.dsp','w')
def sum(a,b):
    with open('LM14.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 38490750+100000:
    print('LM14',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM15*****************************
wenjian = open('LM15.dsp','w')
def sum(a,b):
    with open('LM15.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 34360906+100000:
    print('LM15',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM16*****************************
wenjian = open('LM16.dsp','w')
def sum(a,b):
    with open('LM16.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 33613985+100000:
    print('LM16',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM17*****************************
wenjian = open('LM17.dsp','w')
def sum(a,b):
    with open('LM17.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 32993148+100000:
    print('LM17',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
**********************************脚本的具体改动流水线LM18*****************************
wenjian = open('LM18.dsp','w')
def sum(a,b):
    with open('LM18.d','r')as f1:
        num = 0
        for i in f1.readlines():
            i = i.strip().split('\t')
            if a <= eval(i[1]) and eval(i[1]) <=b:
                num += eval(i[2])
        return num

a = 0
b = 100000
while b <= 32237550+100000:
    print('LM18',end='\t',file=wenjian)
    print(a,end='\t',file=wenjian)
    print(b,end='\t',file=wenjian)
    print(sum(a,b),file=wenjian)
    a += 100000
    b += 100000
合并文件：cat LM01.dsp LM02.dsp LM03.dsp LM04.dsp LM05.dsp LM06.dsp LM07.dsp LM08.dsp LM09.dsp LM10.dsp LM11.dsp LM12.dsp LM13.dsp LM14.dsp LM15.dsp LM16.dsp LM17.dsp LM18.dsp > LM4_PAV_circos.txt
[1]http://www.chenlianfu.com/?p=2103 bwa的使用|陈连福的生信博客
[2]https://www.nature.com/articles/s41477-020-00834-5 Extensive intraspecific gene order and gene structural variations between Mo17 and other maize genomes
