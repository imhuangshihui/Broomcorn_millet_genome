 The LTR Assembly Index (LAI) is developed to evaluate the assembly continunity of repetitive sequences

Usage: ./LAI -genome genome.fa -intact intact.pass.list -all genome.out [options]
Options:
	-genome [file]	The genome file that is used to generate everything.
	-intact [file]	A list of intact LTR-RTs generated by LTR_retriever (genome.fa.pass.list).
	-all [file]	RepeatMasker annotation of all LTR sequences in the genome (genome.fa.out).
	-window [int]	Window size for LAI estimation. Default: 3000000 (3 Mb)
	-step [int]	Step size for the estimation window to move forward. Default: 300000 (300 Kb)
			Set step size = window size if prefer non-overlapping outputs.
	-q		Quick estimation of LTR identity (much faster for large genomes, may sacrifice ~0.5% of accuracy).
	-qq		No estimation of LTR identity, only output raw LAI for within species comparison (very quick).
	-mono [file]	This parameter is mainly for ployploid genomes. User provides a list of sequence names that represent a monoploid (1x).
			LAI will calculated only on these sequences if provided. So user can also specify sequence of interest for LAI calculation.
	-iden [0-100]	Mean LTR identity (%) in the monoploid (1x) genome. This parameter will inactivate de novo estimation (same speed to -qq).
	-totLTR [0-100]	Specify the total LTR sequence content (%) in the genome instead of estimating from the -all RepeatMasker file.
	-blast [path]	The path to the blastn program. If left unspecified, then blastn must be accessible via shell ENV.
	-t [number]	Number of threads to run blastn.
	-h		Display this help info.

Longmi4_v1.fa
Longmi4_v1.fa.pass.list 
Longmi4_v1.fa.out

Parameters: -genome Longmi4_v1.fa -intact Longmi4_v1.fa.pass.list -all Longmi4_v1.fa.out -mono subgenomeA subgenomeB.list


Thu Jul 22 13:43:37 CST 2021    Dependency checking: Passed!
Thu Jul 22 13:43:37 CST 2021    User specified sequence list is provided: subgenomeA
                                Calculation of LAI will be based only on these sequences.
ERROR: No such file or directory at /home/wangzhiheng/miniconda3/envs/LAI/share/LTR_retriever/bin/output_by_list.pl line 39.
【Can't open perl script "/home/wangzhiheng/miniconda3/envs/LAI/share/LTR_retriever/bin/output_by_list.pl": No such file or directory】
cat: subgenomeA: No such file or directory
Thu Jul 22 13:43:37 CST 2021    Estimate the identity of LTR sequences in the genome: standard mode

Estimate the mean identity of LTR regions in the genome via all-versus-all BLAST
Usage: perl Age_est.pl -blast [path to the blastn program] -RMout [Repeatmasker .out file] -genome [genome file] [*options]
Options:
        -q      quick estimation of LTR identity (much faster for large genomes, may sacrifice ~0.5% of accuracy)
        -t      number of threads to run blastn
        -h      print this usage message
Credit: Shujun Ou (oushujun@msu.edu) 02/07/2018

Argument "" isn't numeric in numeric lt (<) at /home/wangzhiheng/miniconda3/envs/LAI/share/LTR_retriever/LAI line 138.
Thu Jul 22 13:43:37 CST 2021    The identity of LTR sequences: %

                                【Warning】 The identity drops below the safe limit. Instead, identity of 92% will be used for LAI adjustment.

Thu Jul 22 13:43:37 CST 2021    Calculate LAI:
Illegal division by zero at /home/wangzhiheng/miniconda3/envs/LAI/share/LTR_retriever/bin/LAI_calc3.pl line 122.
Use of uninitialized value $int in multiplication (*) at /home/wangzhiheng/miniconda3/envs/LAI/share/LTR_retriever/LAI line 161.
Use of uninitialized value $total in multiplication (*) at /home/wangzhiheng/miniconda3/envs/LAI/share/LTR_retriever/LAI line 161.
                                【Error】Intact LTR-RT content (0%) is too low for accurate LAI calculation (min 0.1% required)
                                【Error】 Total LTR sequence content (0%) is too low for accurate LAI calculation (min 5% required)

                                Sorry, LAI is not applicable on the current genome assembly.

 
 
 # 取出带有特定染色体的序列号和LAI值
 cat lzj.fna.mod.out.LAI | awk '$1=="CM029037.1"{print $1,$7}' > ./chr_LAI/pvk01.LA
